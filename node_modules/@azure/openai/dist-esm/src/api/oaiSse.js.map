{"version":3,"file":"oaiSse.js","sourceRoot":"","sources":["../../../src/api/oaiSse.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAWlC,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,OAAO,EAAgB,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAChE,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,MAAM,CAAC,KAAK,UAAU,UAAU,CAC9B,QAAmC,EACnC,OAA2B;IAE3B,MAAM,YAAY,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC/C,MAAM,WAAW,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC;IAClD,MAAM,UAAU,GAAG,IAAI,eAAe,CAAuB;QAC3D,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;YACrC,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gBAC5B,OAAO;YACT,CAAC;YACD,UAAU,CAAC,OAAO,CAChB,OAAO,CACL,SAAS,CACP,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5B,sDAAsD,CACvD,CACF,CACF,CAAC;QACJ,CAAC;KACF,CAAC,CAAC;IACH,4EAA4E;IAC5E,OAAO,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { StreamableMethod } from \"@azure-rest/core-client\";\nimport { getStream } from \"./getSSEs.js\";\nimport { wrapError } from \"./util.js\";\nimport { EventStream } from \"../models/models.js\";\nimport { EventMessage, createSseStream } from \"@azure/core-sse\";\nimport { polyfillStream } from \"./readableStreamUtils.js\";\n\nexport async function getOaiSSEs<TEvent, O extends Record<string, any>>(\n  response: StreamableMethod<unknown>,\n  toEvent: (obj: O) => TEvent,\n): Promise<EventStream<TEvent>> {\n  const stringStream = await getStream(response);\n  const eventStream = createSseStream(stringStream);\n  const jsonParser = new TransformStream<EventMessage, TEvent>({\n    transform: async (chunk, controller) => {\n      if (chunk.data === \"[DONE]\") {\n        return;\n      }\n      controller.enqueue(\n        toEvent(\n          wrapError(\n            () => JSON.parse(chunk.data),\n            \"Error parsing an event. See 'cause' for more details\",\n          ),\n        ),\n      );\n    },\n  });\n  /** TODO: remove these polyfills once all supported runtimes support them */\n  return polyfillStream(eventStream.pipeThrough(jsonParser));\n}\n"]}