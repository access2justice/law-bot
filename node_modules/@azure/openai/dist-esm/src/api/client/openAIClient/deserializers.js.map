{"version":3,"file":"deserializers.js","sourceRoot":"","sources":["../../../../../src/api/client/openAIClient/deserializers.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AA2BlC,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAO9C,SAAS,gCAAgC,CAAC,EACxC,kBAAkB,EAClB,qBAAqB,GACU;;IAC/B,MAAM,GAAG,GAAG,qBAAqB,aAArB,qBAAqB,cAArB,qBAAqB,GAAI,kBAAkB,CAAC;IACxD,OAAO,CACL,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,GAAG,CAAC,CAAC,EAAmC,EAAE,EAAE;YAAvC,EAAE,sBAAsB,OAAW,EAAN,IAAI,cAAjC,0BAAmC,CAAF;QAAO,OAAA,iCAC7C,aAAa,CAAC,IAAI,CAAC,KACtB,oBAAoB,EAAE,8CAA8C,CAAC,sBAAsB,CAAC,IAC5F,CAAA;KAAA,CAAC,mCAAI,EAAE,CACV,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,oBAAoB,CAClC,IAAwD;IAExD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,KAAc,IAAI,EAAb,IAAI,UAAK,IAAI,EAA/E,qEAAwE,CAAO,CAAC;IACtF,uCACK,aAAa,CAAC,IAAI,CAAC,KACtB,OAAO,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAC1B,mBAAmB,EAAE,gCAAgC,CAAC;YACpD,qBAAqB;YACrB,kBAAkB;SACnB,CAAC,EACF,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAqC,EAAE,EAAE;gBAAzC,EAAE,sBAAsB,OAAa,EAAR,MAAM,cAAnC,0BAAqC,CAAF;YAAO,OAAA,iCAC3D,aAAa,CAAC,MAAM,CAAC,GACrB,CAAC,CAAC,sBAAsB;gBACzB,CAAC,CAAC,EAAE;gBACJ,CAAC,CAAC;oBACE,oBAAoB,EAAE,wCAAwC,CAAC,sBAAsB,CAAC;iBACvF,CAAC,EACN,CAAA;SAAA,CAAC,IACH;AACJ,CAAC;AAED,MAAM,UAAU,wBAAwB,CACtC,IAA4D;IAE5D,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,KAAc,IAAI,EAAb,IAAI,UAAK,IAAI,EAA/E,qEAAwE,CAAO,CAAC;IACtF,uCACK,aAAa,CAAC,IAAI,CAAC,KACtB,OAAO,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAC1B,mBAAmB,EAAE,gCAAgC,CAAC;YACpD,qBAAqB;YACrB,kBAAkB;SACnB,CAAC,EACF,OAAO,EAAE,CAAC,OAAO;YACf,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAqD,EAAE,EAAE;oBAAzD,EAAE,sBAAsB,EAAE,KAAK,EAAE,OAAO,OAAa,EAAR,MAAM,cAAnD,8CAAqD,CAAF;gBAAO,OAAA,6DAClE,aAAa,CAAC,MAAM,CAAC,GACrB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAC9C,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,GACpD,CAAC,CAAC,sBAAsB;oBACzB,CAAC,CAAC,EAAE;oBACJ,CAAC,CAAC;wBACE,oBAAoB,EAClB,wCAAwC,CAAC,sBAAsB,CAAC;qBACnE,CAAC,EACN,CAAA;aAAA,CAAC,IACP;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,OAAkC;IACtD,MAAM,EAAE,OAAO,EAAE,UAAU,KAAc,OAAO,EAAhB,IAAI,UAAK,OAAO,EAA1C,yBAAgC,CAAU,CAAC;IACjD,qDACK,aAAa,CAAC,IAAI,CAAC,KACtB,SAAS,EAAE,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,EAAE,KACxB,CAAC,CAAC,OAAO;QACV,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC;YACE,OAAO,oBACF,CAAC,CAAC,OAAO,CAAC,QAAQ;gBACnB,CAAC,CAAC,EAAE;gBACJ,CAAC,CAAC;oBACE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC;iBAC7C,CAAC,CACP;SACF,CAAC,EACN;AACJ,CAAC;AAED,SAAS,UAAU,CAAC,KAAiB;;IACnC,OAAO;QACL,KAAK,kCACA,KAAK,KACR,OAAO,EAAE,MAAA,KAAK,CAAC,SAAS,CAAC,mCAAI,EAAE,GAChC;KACF,CAAC;AACJ,CAAC;AAED,SAAS,8CAA8C,CAAC,KAGT,EAAE;QAHO,EACtD,KAAK,OAE0C,EAD5C,IAAI,cAF+C,SAGvD,CADQ;IAEP,OAAO,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzD,CAAC;AAED,SAAS,wCAAwC,CAAC,KAGT,EAAE;QAHO,EAChD,KAAK,OAEoC,EADtC,IAAI,cAFyC,SAGjD,CADQ;IAEP,OAAO,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzD,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { ErrorModel } from \"@azure-rest/core-client\";\nimport {\n  ChatCompletions,\n  ChatResponseMessage,\n  Completions,\n  ContentFilterResultDetailsForPrompt,\n  ContentFilterResultsForChoice,\n  ContentFilterResultsForPrompt,\n} from \"../../../models/models.js\";\nimport {\n  ChatCompletionsOutput,\n  ChatResponseMessageOutput,\n  CompletionsOutput,\n  ContentFilterResultDetailsForPromptOutput,\n  ContentFilterResultsForChoiceOutput,\n  ContentFilterResultsForPromptOutput,\n} from \"../../../rest/outputModels.js\";\nimport { camelCaseKeys } from \"../../util.js\";\n\ntype ContentFilterResultsForPromptX = {\n  prompt_filter_results?: Array<ContentFilterResultsForPromptOutput>;\n  prompt_annotations?: Array<ContentFilterResultsForPromptOutput>;\n};\n\nfunction getContentFilterResultsForPrompt({\n  prompt_annotations,\n  prompt_filter_results,\n}: ContentFilterResultsForPromptX): ContentFilterResultsForPrompt[] {\n  const res = prompt_filter_results ?? prompt_annotations;\n  return (\n    res?.map(({ content_filter_results, ...rest }) => ({\n      ...camelCaseKeys(rest),\n      contentFilterResults: parseContentFilterResultDetailsForPromptOutput(content_filter_results),\n    })) ?? []\n  );\n}\n\nexport function getCompletionsResult(\n  body: CompletionsOutput & ContentFilterResultsForPromptX,\n): Completions {\n  const { created, choices, prompt_filter_results, prompt_annotations, ...rest } = body;\n  return {\n    ...camelCaseKeys(rest),\n    created: new Date(created),\n    promptFilterResults: getContentFilterResultsForPrompt({\n      prompt_filter_results,\n      prompt_annotations,\n    }),\n    choices: choices.map(({ content_filter_results, ...choice }) => ({\n      ...camelCaseKeys(choice),\n      ...(!content_filter_results\n        ? {}\n        : {\n            contentFilterResults: parseContentFilterResultsForChoiceOutput(content_filter_results),\n          }),\n    })),\n  };\n}\n\nexport function getChatCompletionsResult(\n  body: ChatCompletionsOutput & ContentFilterResultsForPromptX,\n): ChatCompletions {\n  const { created, choices, prompt_filter_results, prompt_annotations, ...rest } = body;\n  return {\n    ...camelCaseKeys(rest),\n    created: new Date(created),\n    promptFilterResults: getContentFilterResultsForPrompt({\n      prompt_filter_results,\n      prompt_annotations,\n    }),\n    choices: !choices\n      ? []\n      : choices.map(({ content_filter_results, delta, message, ...choice }) => ({\n          ...camelCaseKeys(choice),\n          ...(!delta ? {} : { delta: parseMessage(delta) }),\n          ...(!message ? {} : { message: parseMessage(message) }),\n          ...(!content_filter_results\n            ? {}\n            : {\n                contentFilterResults:\n                  parseContentFilterResultsForChoiceOutput(content_filter_results),\n              }),\n        })),\n  };\n}\n\nfunction parseMessage(message: ChatResponseMessageOutput): ChatResponseMessage {\n  const { context, tool_calls, ...rest } = message;\n  return {\n    ...camelCaseKeys(rest),\n    toolCalls: tool_calls ?? [],\n    ...(!context\n      ? {}\n      : {\n          context: {\n            ...(!context.messages\n              ? {}\n              : {\n                  messages: context.messages.map(parseMessage),\n                }),\n          },\n        }),\n  };\n}\n\nfunction parseError(error: ErrorModel): { error: ErrorModel } {\n  return {\n    error: {\n      ...error,\n      details: error[\"details\"] ?? [],\n    },\n  };\n}\n\nfunction parseContentFilterResultDetailsForPromptOutput({\n  error,\n  ...rest\n}: ContentFilterResultDetailsForPromptOutput = {}): ContentFilterResultDetailsForPrompt {\n  return error ? parseError(error) : camelCaseKeys(rest);\n}\n\nfunction parseContentFilterResultsForChoiceOutput({\n  error,\n  ...rest\n}: ContentFilterResultsForChoiceOutput = {}): ContentFilterResultsForChoice {\n  return error ? parseError(error) : camelCaseKeys(rest);\n}\n"]}