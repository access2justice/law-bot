/**
 * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * Any changes you make here may be lost.
 *
 * If you need to make changes, please do so in the original source file, \{project-root\}/sources/custom
 */
import { OpenAIContext } from "../../../api/OpenAIContext.js";
import { AudioTranscriptionOptions, AudioTranscription, AudioTranslationOptions, AudioTranslation, CompletionsOptions, Completions, ChatCompletionsOptions, ChatCompletions, ImageGenerationOptions, ImageGenerations, EmbeddingsOptions, Embeddings } from "../../../models/models.js";
import { ClientOpenAIClientGetAudioTranscriptionAsPlainTextOptions, ClientOpenAIClientGetAudioTranscriptionAsResponseObjectOptions, ClientOpenAIClientGetAudioTranslationAsPlainTextOptions, ClientOpenAIClientGetAudioTranslationAsResponseObjectOptions, ClientOpenAIClientGetCompletionsOptions, ClientOpenAIClientGetChatCompletionsOptions, ClientOpenAIClientGetChatCompletionsWithAzureExtensionsOptions, ClientOpenAIClientGetImageGenerationsOptions, ClientOpenAIClientGetEmbeddingsOptions } from "../../../models/options.js";
export interface ClientOpenAIClientOperations {
    getAudioTranscriptionAsPlainText: (deploymentId: string, body: AudioTranscriptionOptions, options?: ClientOpenAIClientGetAudioTranscriptionAsPlainTextOptions) => Promise<string>;
    getAudioTranscriptionAsResponseObject: (deploymentId: string, body: AudioTranscriptionOptions, options?: ClientOpenAIClientGetAudioTranscriptionAsResponseObjectOptions) => Promise<AudioTranscription>;
    getAudioTranslationAsPlainText: (deploymentId: string, body: AudioTranslationOptions, options?: ClientOpenAIClientGetAudioTranslationAsPlainTextOptions) => Promise<string>;
    getAudioTranslationAsResponseObject: (deploymentId: string, body: AudioTranslationOptions, options?: ClientOpenAIClientGetAudioTranslationAsResponseObjectOptions) => Promise<AudioTranslation>;
    getCompletions: (deploymentId: string, body: CompletionsOptions, options?: ClientOpenAIClientGetCompletionsOptions) => Promise<Completions>;
    getChatCompletions: (deploymentId: string, body: ChatCompletionsOptions, options?: ClientOpenAIClientGetChatCompletionsOptions) => Promise<ChatCompletions>;
    getChatCompletionsWithAzureExtensions: (deploymentId: string, body: ChatCompletionsOptions, options?: ClientOpenAIClientGetChatCompletionsWithAzureExtensionsOptions) => Promise<ChatCompletions>;
    getImageGenerations: (deploymentId: string, body: ImageGenerationOptions, options?: ClientOpenAIClientGetImageGenerationsOptions) => Promise<ImageGenerations>;
    getEmbeddings: (deploymentId: string, body: EmbeddingsOptions, options?: ClientOpenAIClientGetEmbeddingsOptions) => Promise<Embeddings>;
}
export declare function getClientOpenAIClient(context: OpenAIContext): ClientOpenAIClientOperations;
export declare function getClientOpenAIClientOperations(context: OpenAIContext): ClientOpenAIClientOperations;
//# sourceMappingURL=index.d.ts.map