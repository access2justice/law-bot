{"version":3,"file":"serialization.js","sourceRoot":"","sources":["../../src/serialization.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport GeographyPoint from \"./geographyPoint\";\n\nconst ISO8601DateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z$/i;\nconst GeoJSONPointTypeName = \"Point\";\nconst WorldGeodeticSystem1984 = \"EPSG:4326\"; // See https://epsg.io/4326\n\nexport function serialize<OutputT>(obj: unknown): OutputT {\n  return walk(obj, (value) => {\n    const result = serializeSpecialNumbers(value);\n    return result;\n  });\n}\n\nexport function deserialize<OutputT>(obj: unknown): OutputT {\n  return walk(obj, (value) => {\n    let result = deserializeSpecialNumbers(value);\n    result = deserializeDates(result);\n    result = deserializeGeoPoint(result);\n    return result;\n  });\n}\n\nfunction walk(start: unknown, mapper: (val: any) => any): any {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const seenMarker = new WeakMap<object, boolean>();\n  const result = { value: undefined };\n  const queue: { value: any; parent: any; key: string }[] = [\n    { value: start, parent: result, key: \"value\" },\n  ];\n\n  while (queue.length) {\n    const current = queue.shift()!;\n\n    if (typeof current.value === \"object\" && current.value !== null) {\n      if (seenMarker.has(current.value)) {\n        continue;\n      } else {\n        seenMarker.set(current.value, true);\n      }\n    }\n\n    const mapped = mapper(current.value);\n    if (current?.parent && current.key) {\n      current.parent[current.key] = mapped;\n    }\n    if (typeof mapped === \"object\" && mapped !== null) {\n      for (const key of Object.keys(mapped)) {\n        queue.push({\n          value: mapped[key],\n          parent: mapped,\n          key,\n        });\n      }\n    }\n  }\n\n  return result.value;\n}\n\nfunction serializeSpecialNumbers(input: unknown): unknown {\n  if (typeof input === \"number\") {\n    if (isNaN(input)) {\n      return \"NaN\";\n    } else if (input === Infinity) {\n      return \"INF\";\n    } else if (input === -Infinity) {\n      return \"-INF\";\n    }\n  }\n  return input;\n}\n\nfunction deserializeSpecialNumbers(input: unknown): unknown {\n  if (typeof input === \"string\") {\n    if (input === \"NaN\") {\n      return NaN;\n    } else if (input === \"INF\") {\n      return Infinity;\n    } else if (input === \"-INF\") {\n      return -Infinity;\n    }\n  }\n  return input;\n}\n\nfunction deserializeDates(input: unknown): Date | unknown {\n  if (typeof input === \"string\") {\n    if (ISO8601DateRegex.test(input)) {\n      return new Date(input);\n    }\n  }\n  return input;\n}\n\nfunction deserializeGeoPoint(input: unknown): GeographyPoint | unknown {\n  if (isGeoJSONPoint(input)) {\n    return new GeographyPoint({ longitude: input.coordinates[0], latitude: input.coordinates[1] });\n  }\n\n  return input;\n}\n\ninterface GeoJSONPoint {\n  type: \"Point\";\n  coordinates: [number, number];\n  crs: {\n    type: \"name\";\n    properties: {\n      name: \"EPSG:4326\";\n    };\n  };\n}\n\nfunction isGeoJSONPoint(obj: any): obj is GeoJSONPoint {\n  const requiredKeys = [\"type\", \"coordinates\"];\n  return isValidObject(obj, {\n    requiredKeys,\n    propertyValidator: (key) => {\n      switch (key) {\n        case \"type\":\n          return obj.type === GeoJSONPointTypeName;\n          break;\n        case \"coordinates\":\n          return isCoordinateArray(obj.coordinates);\n          break;\n        case \"crs\":\n          return isCrs(obj.crs);\n          break;\n        default:\n          return false;\n      }\n    },\n  });\n}\n\nfunction isCoordinateArray(maybeCoordinates: any): boolean {\n  if (!Array.isArray(maybeCoordinates)) {\n    return false;\n  }\n  if (maybeCoordinates.length !== 2) {\n    return false;\n  }\n  if (typeof maybeCoordinates[0] !== \"number\" || typeof maybeCoordinates[1] !== \"number\") {\n    return false;\n  }\n  return true;\n}\n\nfunction isCrs(maybeCrs: any): boolean {\n  return isValidObject(maybeCrs, {\n    requiredKeys: [\"type\", \"properties\"],\n    propertyValidator: (key) => {\n      switch (key) {\n        case \"type\":\n          return maybeCrs.type === \"name\";\n          break;\n        case \"properties\":\n          return isCrsProperties(maybeCrs.properties);\n          break;\n        default:\n          return false;\n      }\n    },\n  });\n}\n\nfunction isCrsProperties(maybeProperties: any): boolean {\n  return isValidObject(maybeProperties, {\n    requiredKeys: [\"name\"],\n    propertyValidator: (key) => {\n      if (key === \"name\") {\n        return maybeProperties.name === WorldGeodeticSystem1984;\n      } else {\n        return false;\n      }\n    },\n  });\n}\n\nfunction isValidObject(\n  obj: any,\n  options: {\n    requiredKeys?: string[];\n    propertyValidator?: (keyName: string) => boolean;\n  } = {}\n): boolean {\n  if (typeof obj !== \"object\" || obj === null) {\n    return false;\n  }\n\n  const keys = Object.keys(obj);\n\n  if (options.requiredKeys) {\n    for (const requiredKey of options.requiredKeys) {\n      if (!keys.includes(requiredKey)) {\n        return false;\n      }\n    }\n  }\n\n  if (options.propertyValidator) {\n    for (const key of keys) {\n      if (!options.propertyValidator(key)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"]}